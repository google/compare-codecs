# Copyright 2014 Google.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
From 8c03c0cee0ef73f80e0b8848267922af97e46883 Mon Sep 17 00:00:00 2001
From: Adrian Grange <agrange@google.com>
Date: Wed, 11 Dec 2013 11:12:13 -0800
Subject: [PATCH 1/1] (WIP) Added per frame-type fixed quantizer values

Added command line parameters to pass fixed quntizer values
for each frame type (Keyframe, Golden, ARF, Normal inter).

Hooked these parameters up to configuration variables and
code to enforce these fixed quantizers if fixedq mode is
selected.

This needs work to make the selection of fixedq mode less
clunky and also to add the ability to impose a fixed frame
type pattern on the encode.

Change-Id: Ic0000f50d5edf6351dad4ed0d398f7a88922bece
---
 vp8/encoder/onyx_if.c |  3 ++-
 vp8/vp8_cx_iface.c    | 25 ++++++++++++++++++++++---
 vp9/vp9_cx_iface.c    |  6 ++++++
 vpx/vpx_encoder.h     |  5 +++++
 vpxenc.c              | 19 ++++++++++++++++++-
 5 files changed, 53 insertions(+), 5 deletions(-)

diff --git a/vp8/encoder/onyx_if.c b/vp8/encoder/onyx_if.c
index d5a0fff..4487ab4 100644
--- a/vp8/encoder/onyx_if.c
+++ b/vp8/encoder/onyx_if.c
@@ -1615,7 +1615,8 @@ void vp8_change_config(VP8_COMP *cpi, VP8_CONFIG *oxcf)
         if (oxcf->worst_allowed_q < 0)
             cpi->oxcf.fixed_q = q_trans[0];
         else
-            cpi->oxcf.fixed_q = q_trans[oxcf->worst_allowed_q];
+//          cpi->oxcf.fixed_q = q_trans[oxcf->worst_allowed_q];
+            cpi->oxcf.fixed_q = q_trans[oxcf->fixed_q];
 
         if (oxcf->alt_q < 0)
             cpi->oxcf.alt_q = q_trans[0];
diff --git a/vp8/vp8_cx_iface.c b/vp8/vp8_cx_iface.c
index 22a82b7..0c75011 100644
--- a/vp8/vp8_cx_iface.c
+++ b/vp8/vp8_cx_iface.c
@@ -139,8 +139,19 @@ static vpx_codec_err_t validate_config(vpx_codec_alg_priv_t      *ctx,
     RANGE_CHECK(cfg, g_timebase.den,        1, 1000000000);
     RANGE_CHECK(cfg, g_timebase.num,        1, 1000000000);
     RANGE_CHECK_HI(cfg, g_profile,          3);
-    RANGE_CHECK_HI(cfg, rc_max_quantizer,   63);
-    RANGE_CHECK_HI(cfg, rc_min_quantizer,   cfg->rc_max_quantizer);
+
+    RANGE_CHECK(cfg, rc_fixed_quantizer,    -1, 63);
+    if (cfg->rc_fixed_quantizer >= 0) {
+      // Check fixed-Q setup, ignore rc_min_quantizer & rc_max_quantizer.
+      RANGE_CHECK(cfg, rc_fixed_quantizer,  0, 63);
+      RANGE_CHECK(cfg, rc_key_quantizer,    0, 63);
+      RANGE_CHECK(cfg, rc_gold_quantizer,   0, 63);
+      RANGE_CHECK(cfg, rc_alt_quantizer,    0, 63);
+    } else {
+      RANGE_CHECK_HI(cfg, rc_max_quantizer,   63);
+      RANGE_CHECK_HI(cfg, rc_min_quantizer,   cfg->rc_max_quantizer);
+    }
+
     RANGE_CHECK_HI(cfg, g_threads,          64);
 #if CONFIG_REALTIME_ONLY
     RANGE_CHECK_HI(cfg, g_lag_in_frames,    0);
@@ -342,7 +353,11 @@ static vpx_codec_err_t set_vp8e_config(VP8_CONFIG *oxcf,
     oxcf->best_allowed_q           = cfg.rc_min_quantizer;
     oxcf->worst_allowed_q          = cfg.rc_max_quantizer;
     oxcf->cq_level                 = vp8_cfg.cq_level;
-    oxcf->fixed_q = -1;
+
+    oxcf->fixed_q                  = cfg.rc_fixed_quantizer;
+    oxcf->key_q                    = cfg.rc_key_quantizer;
+    oxcf->gold_q                   = cfg.rc_gold_quantizer;
+    oxcf->alt_q                    = cfg.rc_alt_quantizer;
 
     oxcf->under_shoot_pct          = cfg.rc_undershoot_pct;
     oxcf->over_shoot_pct           = cfg.rc_overshoot_pct;
@@ -1315,6 +1330,10 @@ static vpx_codec_enc_cfg_map_t vp8e_usage_cfg_map[] =
         256,                /* rc_target_bandwidth */
         4,                  /* rc_min_quantizer */
         63,                 /* rc_max_quantizer */
+        -1,                 /* rc_fixed_quantizer */
+        -1,                 /* rc_key_quantizer */
+        -1,                 /* rc_gold_quantizer */
+        -1,                 /* rc_alt_quantizer */
         100,                /* rc_undershoot_pct */
         100,                /* rc_overshoot_pct */
 
diff --git a/vp9/vp9_cx_iface.c b/vp9/vp9_cx_iface.c
index 10d6893..03b84d6 100644
--- a/vp9/vp9_cx_iface.c
+++ b/vp9/vp9_cx_iface.c
@@ -1596,6 +1596,12 @@ static vpx_codec_enc_cfg_map_t encoder_usage_cfg_map[] = {
       256,                // rc_target_bandwidth
       0,                  // rc_min_quantizer
       63,                 // rc_max_quantizer
+
+      -1,                 // rc_fixed_quantizer
+      -1,
+      -1,
+      -1,
+ 
       25,                 // rc_undershoot_pct
       25,                 // rc_overshoot_pct
 
diff --git a/vpx/vpx_encoder.h b/vpx/vpx_encoder.h
index 955e873..c7939e4 100644
--- a/vpx/vpx_encoder.h
+++ b/vpx/vpx_encoder.h
@@ -538,6 +538,11 @@ extern "C" {
      */
     unsigned int           rc_max_quantizer;
 
+    int                    rc_fixed_quantizer;
+    int                    rc_key_quantizer;
+    int                    rc_gold_quantizer;
+    int                    rc_alt_quantizer;
+
 
     /*
      * bitrate tolerance
diff --git a/vpxenc.c b/vpxenc.c
index efcf064..d34ad7a 100644
--- a/vpxenc.c
+++ b/vpxenc.c
@@ -284,6 +284,14 @@ static const arg_def_t min_quantizer = ARG_DEF(
     NULL, "min-q", 1, "Minimum (best) quantizer");
 static const arg_def_t max_quantizer = ARG_DEF(
     NULL, "max-q", 1, "Maximum (worst) quantizer");
+static const arg_def_t fixed_quantizer = ARG_DEF(
+    NULL, "fixed-q", 1, "Fixed quantizer");
+static const arg_def_t key_quantizer = ARG_DEF(
+    NULL, "key-q", 1, "Key frame quantizer");
+static const arg_def_t gold_quantizer = ARG_DEF(
+    NULL, "gold-q", 1, "Golden frame quantizer");
+static const arg_def_t alt_quantizer = ARG_DEF(
+    NULL, "alt-q", 1, "ARF quantizer");
 static const arg_def_t undershoot_pct = ARG_DEF(
     NULL, "undershoot-pct", 1, "Datarate undershoot (min) target (%)");
 static const arg_def_t overshoot_pct = ARG_DEF(
@@ -297,7 +305,8 @@ static const arg_def_t buf_optimal_sz = ARG_DEF(
 static const arg_def_t *rc_args[] = {
   &dropframe_thresh, &resize_allowed, &resize_width, &resize_height,
   &resize_up_thresh, &resize_down_thresh, &end_usage, &target_bitrate,
-  &min_quantizer, &max_quantizer, &undershoot_pct, &overshoot_pct, &buf_sz,
+  &min_quantizer, &max_quantizer, &fixed_quantizer, &key_quantizer,
+  &gold_quantizer, &alt_quantizer,&undershoot_pct, &overshoot_pct, &buf_sz,
   &buf_initial_sz, &buf_optimal_sz, NULL
 };
 
@@ -1159,6 +1168,14 @@ static int parse_stream_params(struct VpxEncoderConfig *global,
       config->cfg.rc_min_quantizer = arg_parse_uint(&arg);
     } else if (arg_match(&arg, &max_quantizer, argi)) {
       config->cfg.rc_max_quantizer = arg_parse_uint(&arg);
+    } else if (arg_match(&arg, &fixed_quantizer, argi)) {
+      config->cfg.rc_fixed_quantizer = arg_parse_int(&arg);
+    } else if (arg_match(&arg, &key_quantizer, argi)) {
+      config->cfg.rc_key_quantizer = arg_parse_int(&arg);
+    } else if (arg_match(&arg, &gold_quantizer, argi)) {
+      config->cfg.rc_gold_quantizer = arg_parse_int(&arg);
+    } else if (arg_match(&arg, &alt_quantizer, argi)) {
+      config->cfg.rc_alt_quantizer = arg_parse_int(&arg);
     } else if (arg_match(&arg, &undershoot_pct, argi)) {
       config->cfg.rc_undershoot_pct = arg_parse_uint(&arg);
     } else if (arg_match(&arg, &overshoot_pct, argi)) {

