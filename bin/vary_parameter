#!/usr/bin/python
# Copyright 2015 Google.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
"""Parameter variation probing tool.

Usage: vary_parameter [--codec codec] [--criterion criterion]
       --parameter name rate videofile

This script consults the run database for the codec,
picks the best encoding so far, and runs the encodings for all the
possible values of the parameter.
"""

import argparse
import sys

import encoder
import optimizer
import pick_codec
import score_tools


def main():
  parser = argparse.ArgumentParser()
  parser.add_argument('rate')
  parser.add_argument('videofile')
  parser.add_argument("--codec")
  parser.add_argument("--parameter")
  parser.add_argument('--criterion', default='psnr')
  args = parser.parse_args()

  videofile = encoder.Videofile(args.videofile)

  bitrate = int(args.rate)
  args = parser.parse_args()

  videofile = encoder.Videofile(args.videofile)

  codec = pick_codec.PickCodec(args.codec)
  my_optimizer = optimizer.Optimizer(codec,
      score_function=score_tools.PickScorer(args.criterion))

  bestsofar = my_optimizer.BestEncoding(bitrate, videofile)
  for value in codec.Option(args.parameter).values:
    this_encoding = bestsofar.ChangeValue(args.parameter, value)
    this_encoding.Recover()
    if not this_encoding.Result():
      this_encoding.Execute()
      this_encoding.Store()
    print 'Score for value', value, 'is', my_optimizer.Score(this_encoding)

if __name__ == '__main__':
  sys.exit(main())

