#!/usr/bin/python
# Copyright 2014 Google.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Verifies whether any encodings have changed compared to what's in the
# database.
# Intended for use after upgrading software.
#
import argparse
import sys

import mpeg_settings
import encoder
import optimizer
import pick_codec
import score_tools

def VerifyOneTarget(codecs, rate, videofile, criterion):
  change_count = 0
  for codec_name in codecs:
    codec = pick_codec.PickCodec(codec_name)
    my_optimizer = optimizer.Optimizer(codec,
        score_function=score_tools.PickScorer(criterion))
    bestsofar = my_optimizer.BestEncoding(rate, videofile)
    if not bestsofar.Result():
      print '%s rate %s file %s has no score' % (
        codec_name, rate, videofile.basename)
    else:
      if not bestsofar.VerifyEncode():
        print '%s rate %s file %s has changed encoding' % (
          codec_name, rate, videofile.basename)
        change_count += 1
  return change_count

def VerifyResults(codecs, criterion):
  change_count = 0
  for rate, filename in mpeg_settings.MpegFiles().AllFilesAndRates():
    videofile = encoder.Videofile(filename)
    change_count += VerifyOneTarget(codecs, rate, videofile, criterion)
  return change_count

def main():
  parser = argparse.ArgumentParser()
  parser.add_argument('codecs', nargs='*',
                      default=pick_codec.AllCodecNames())
  parser.add_argument('--criterion', default='psnr')
  args = parser.parse_args()
  change_count = VerifyResults(args.codecs, args.criterion)
  print 'Number of changes: %d' % change_count
  if change_count > 0:
    return 1
  return 0

if __name__ == '__main__':
  sys.exit(main())
